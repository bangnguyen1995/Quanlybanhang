/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Jrame;

import Heper.sharehelper;
import dao.database;
import dao.hoadonchitietdao;
import dao.hoadondao;
import dao.sanphamdao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.hoadon;
import models.hoadonchitiet;
import models.sanpham;
import print.printBill;

/**
 *
 * @author DELL
 */
public class quanlyhoadon extends javax.swing.JFrame {

    /**
     * Creates new form quanlyhoadon2
     */
    public quanlyhoadon() {
        initComponents();
        setLocationRelativeTo(null);
        updatengay();
        updatenguoitao();
        loadDataToTable();
        txtTongtien.setText("0đ");
    }

    public boolean check() throws Exception {
        if (txtMaHD.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không bỏ trống mã hóa đơn");
            return false;
        }
        hoadondao dao = new hoadondao();
        hoadon hd = new hoadon();
        hd = dao.findID(txtMaHD.getText());
        if (hd != null) {
            JOptionPane.showMessageDialog(this, "trùng mã hóa đơn");
            return false;
        }

        return true;
    }

    public boolean check2() throws Exception {
        if (txtSoluong.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không bỏ trống số lượng");
            txtSoluong.requestFocus();
            return false;
        } else if (txtGiamgia.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không bỏ trống giảm giá");
            txtGiamgia.requestFocus();
            return false;
        }
        try {
            int soluong = Integer.parseInt(txtSoluong.getText());
            if (soluong <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0");
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Số lượng phải nhập số nguyên");
            return false;

        }
        try {
            int giamgia = Integer.parseInt(txtGiamgia.getText());
            if (giamgia < 0) {
                JOptionPane.showMessageDialog(this, "giảm giá phải phải lớn hơn hoặc bằng 0");
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Giảm giá phải nhập số nguyên ");
        }
        return true;
    }

    public void updatengay() {
        Date date = new Date();
        SimpleDateFormat ngaytao = new SimpleDateFormat("dd/MM/yyyy");
        txtNgaytao.setText(ngaytao.format(date));
    }

    public void updatenguoitao() {
        txtNguoitao.setText(sharehelper.user.getMaNV());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        txtNgaytao = new javax.swing.JTextField();
        txtNguoitao = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHD = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSoluong = new javax.swing.JTextField();
        txtGiamgia = new javax.swing.JTextField();
        cboTenSP = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        btnThemHDCT = new javax.swing.JButton();
        btnSuaHDCT = new javax.swing.JButton();
        btnXoaHDCT = new javax.swing.JButton();
        btnMoiHDCT = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHDCT = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtTongtien = new javax.swing.JTextField();
        btnTimkiem = new javax.swing.JButton();
        txtTimkiem = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý hóa đơn");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("QUẢN LÝ HÓA ĐƠN");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Mã hóa đơn");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Ngày tạo");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Người tạo");

        txtNgaytao.setEditable(false);

        txtNguoitao.setEditable(false);

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Ngày tạo", "Người tạo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHD);
        if (tblHD.getColumnModel().getColumnCount() > 0) {
            tblHD.getColumnModel().getColumn(0).setResizable(false);
            tblHD.getColumnModel().getColumn(2).setResizable(false);
        }

        jSeparator1.setBackground(new java.awt.Color(51, 0, 255));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("Chi tiết hóa đơn");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Tên sản phẩm");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setText("Số lượng");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setText("Giảm giá (%)");

        cboTenSP.setMaximumRowCount(5);
        cboTenSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTenSPActionPerformed(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(204, 204, 255), null, null));

        btnThemHDCT.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnThemHDCT.setForeground(new java.awt.Color(51, 51, 255));
        btnThemHDCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/save2.png"))); // NOI18N
        btnThemHDCT.setText("ThÊM");
        btnThemHDCT.setEnabled(false);
        btnThemHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHDCTActionPerformed(evt);
            }
        });

        btnSuaHDCT.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSuaHDCT.setForeground(new java.awt.Color(51, 51, 255));
        btnSuaHDCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/update2.png"))); // NOI18N
        btnSuaHDCT.setText("SỬA");
        btnSuaHDCT.setEnabled(false);
        btnSuaHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaHDCTActionPerformed(evt);
            }
        });

        btnXoaHDCT.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnXoaHDCT.setForeground(new java.awt.Color(51, 51, 255));
        btnXoaHDCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/delete2.png"))); // NOI18N
        btnXoaHDCT.setText("XÓA");
        btnXoaHDCT.setEnabled(false);
        btnXoaHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHDCTActionPerformed(evt);
            }
        });

        btnMoiHDCT.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnMoiHDCT.setForeground(new java.awt.Color(51, 51, 255));
        btnMoiHDCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/new2.png"))); // NOI18N
        btnMoiHDCT.setText("MỚI");
        btnMoiHDCT.setEnabled(false);
        btnMoiHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiHDCTActionPerformed(evt);
            }
        });

        btnPrint.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPrint.setForeground(new java.awt.Color(51, 51, 255));
        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/print.png"))); // NOI18N
        btnPrint.setText("IN HÓA ĐƠN");
        btnPrint.setEnabled(false);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(btnThemHDCT)
                .addGap(31, 31, 31)
                .addComponent(btnSuaHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(btnXoaHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(btnMoiHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnPrint)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSuaHDCT)
                    .addComponent(btnXoaHDCT)
                    .addComponent(btnMoiHDCT)
                    .addComponent(btnThemHDCT)
                    .addComponent(btnPrint))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblHDCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã HDCT", "Tên sản phẩm", "số lượng", "Giảm giá (%)", "Thành tiền (VNĐ)"
            }
        ));
        tblHDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHDCTMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblHDCT);

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(204, 204, 255), null, null));

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(51, 51, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/save2.png"))); // NOI18N
        btnThem.setText("THÊM");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnMoi.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnMoi.setForeground(new java.awt.Color(51, 0, 255));
        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/new2.png"))); // NOI18N
        btnMoi.setText("MỚI");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(51, 0, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/delete2.png"))); // NOI18N
        btnXoa.setText("XÓA");
        btnXoa.setEnabled(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btnThem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnMoi))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("Tổng tiền:");

        txtTongtien.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        btnTimkiem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnTimkiem.setForeground(new java.awt.Color(51, 51, 255));
        btnTimkiem.setText("TÌM KIẾM HĐ");
        btnTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimkiemActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 255));
        jLabel10.setText("Hóa đơn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(cboTenSP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(txtSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(txtGiamgia, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(327, 327, 327))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(txtTongtien, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))))
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel2)
                .addGap(23, 23, 23)
                .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(txtNgaytao, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(txtNguoitao, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTimkiem)
                                .addGap(18, 18, 18)
                                .addComponent(txtTimkiem))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addComponent(jLabel10)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgaytao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNguoitao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTimkiem)
                    .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(txtSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiamgia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTongtien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadCombobox() {
        try {
            cboTenSP.removeAllItems();
            hoadonchitietdao dao = new hoadonchitietdao();
            List<sanpham> list = dao.findAlltenSPkhongchotrongHD(txtMaHD.getText());
            for (sanpham sp : list) {
                cboTenSP.addItem(sp.getTenSP());

            }
            ;
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }

    private void tblHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHDMouseClicked

        int selectedRow = tblHD.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        String id = tblHD.getValueAt(selectedRow, 0).toString();

        try {
            hoadondao dao = new hoadondao();
            hoadon hd = dao.findID(id);

            txtMaHD.setText(hd.getMaHD());
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
            Date date = new Date();
            String ngaytao = formatter.format(hd.getNgaytao());
            txtNgaytao.setText(ngaytao);
            txtNguoitao.setText(hd.getMaNV());
            loadDataToTableHDCT();
            tongtien();
            loadCombobox();
            if (sharehelper.user.isVaitro()) {
                btnXoa.setEnabled(true);
            }
            txtMaHD.setEditable(false);
            btnThem.setEnabled(false);
            btnThemHDCT.setEnabled(true);
            btnMoiHDCT.setEnabled(true);
            btnSuaHDCT.setEnabled(false);
            btnXoaHDCT.setEnabled(false);
            txtGiamgia.setText("0");
            txtSoluong.setText("");
            btnPrint.setEnabled(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_tblHDMouseClicked

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        txtMaHD.setText("");
        txtTimkiem.setText("");
        updatengay();
        updatenguoitao();
        btnThem.setEnabled(true);
        btnXoa.setEnabled(false);
        txtMaHD.setEditable(true);
        txtTongtien.setText("0đ");
        btnThemHDCT.setEnabled(false);
            btnPrint.setEnabled(false);
        loadCombobox();
        try {
            loadDataToTableHDCT();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(quanlyhoadon.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(quanlyhoadon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            hoadondao dao = new hoadondao();
            if (dao.delete(txtMaHD.getText())) {
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                loadDataToTable();
                loadCombobox();
                btnMoiActionPerformed(evt);

            } else {
                JOptionPane.showMessageDialog(this, "Không xóa được");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            if (check()) {
                hoadondao dao = new hoadondao();
                hoadon hd = new hoadon();
                hd.setMaHD(txtMaHD.getText());
                Date ngaytao = new SimpleDateFormat("dd/MM/yyyy").parse(txtNgaytao.getText());
                hd.setNgaytao(ngaytao);
                hd.setMaNV(txtNguoitao.getText());
                dao.insert(hd);
                JOptionPane.showMessageDialog(this, "Thêm thành công");
                loadDataToTable();
                btnMoiActionPerformed(evt);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblHDCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHDCTMouseClicked

        int selectedRow = tblHDCT.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        String id = tblHDCT.getValueAt(selectedRow, 0).toString();
        int mahdct = Integer.parseInt(id);
        try {
            hoadonchitietdao dao = new hoadonchitietdao();
            hoadonchitiet hdct = dao.findID(mahdct);
            String soluong = String.valueOf(hdct.getSoluong());
            txtSoluong.setText(soluong);
            String giamgia = String.valueOf(hdct.getGiamgia());
            txtGiamgia.setText(giamgia);
            if (sharehelper.user.isVaitro()) {
                btnSuaHDCT.setEnabled(true);
                btnXoaHDCT.setEnabled(true);
            }
            btnThemHDCT.setEnabled(false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_tblHDCTMouseClicked

    private void btnThemHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHDCTActionPerformed
        try {
            if (check2()) {
                sanphamdao dao = new sanphamdao();
                hoadonchitietdao dao1 = new hoadonchitietdao();
                sanpham sp = dao.findbyname((String) cboTenSP.getSelectedItem());
                hoadonchitiet hdct = new hoadonchitiet();
                int sl = Integer.parseInt(txtSoluong.getText());
                int gg = Integer.parseInt(txtGiamgia.getText());
                hdct.setSoluong(sl);
                hdct.setGiamgia(gg);
                hdct.setMaHD(txtMaHD.getText());
                hdct.setMaSP(sp.getMaSP());
                if (dao1.insert(hdct)) {
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                    loadDataToTableHDCT();
                    loadCombobox();
                    btnMoiHDCTActionPerformed(evt);
                    String sql = "update sanpham  set   soluongSP = soluongSP - " + hdct.getSoluong() + "where maSP = ?";
                    try (
                            Connection con = database.openConnection();
                            PreparedStatement pstm = con.prepareStatement(sql);) {
                        pstm.setInt(1, sp.getMaSP());
                        pstm.executeUpdate();
                    }
                    tongtien();
                    if (sp.getSoluongSP() < 10) {
                        JOptionPane.showMessageDialog(this, "số lượng sản phẩm còn dưới 10 ");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Không thêm được");
                }
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnThemHDCTActionPerformed

    private void btnMoiHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiHDCTActionPerformed
        txtSoluong.setText("");
        txtGiamgia.setText("0");
        btnThemHDCT.setEnabled(true);
        btnSuaHDCT.setEnabled(false);
        btnXoaHDCT.setEnabled(false);

    }//GEN-LAST:event_btnMoiHDCTActionPerformed

    private void btnSuaHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaHDCTActionPerformed
        try {
            if (check2()) {
                int selectedRow = tblHDCT.getSelectedRow();
                if (selectedRow < 0) {
                    return;
                }

                String id = tblHDCT.getValueAt(selectedRow, 0).toString();
                String masp = tblHDCT.getValueAt(selectedRow, 1).toString();
                String soluongmua = tblHDCT.getValueAt(selectedRow, 2).toString();
                int slm = Integer.parseInt(soluongmua);
                int mahdct = Integer.parseInt(id);
                sanphamdao dao1 = new sanphamdao();
                hoadonchitietdao dao = new hoadonchitietdao();
                sanpham sp = dao1.findbyname(masp);
                hoadonchitiet hdct = new hoadonchitiet();
                hdct.setMaHDCT(mahdct);
                int soluong = Integer.parseInt(txtSoluong.getText());
                hdct.setSoluong(soluong);
                int giamgia = Integer.parseInt(txtGiamgia.getText());
                hdct.setGiamgia(giamgia);
                if (dao.update(hdct)) {
                    JOptionPane.showMessageDialog(this, "Sửa thành công");
                    loadDataToTableHDCT();
                    btnMoiHDCTActionPerformed(evt);
                    String sql = "update sanpham  set   soluongSP = soluongSP + " + (slm - soluong) + "where maSP = ?";
                    try (
                            Connection con = database.openConnection();
                            PreparedStatement pstm = con.prepareStatement(sql);) {
                        pstm.setInt(1, sp.getMaSP());
                        pstm.executeUpdate();
                    }
                    tongtien();
                } else {
                    JOptionPane.showMessageDialog(this, "Không sửa được");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSuaHDCTActionPerformed

    private void btnXoaHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHDCTActionPerformed
        try {
            int selectedRow = tblHDCT.getSelectedRow();
            if (selectedRow < 0) {
                return;
            }
            String id = tblHDCT.getValueAt(selectedRow, 0).toString();
            int mahdct = Integer.parseInt(id);
            hoadonchitietdao dao = new hoadonchitietdao();
            if (dao.delete(mahdct)) {
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                loadDataToTableHDCT();
                loadCombobox();
                tongtien();
                btnMoiHDCTActionPerformed(evt);

            } else {
                JOptionPane.showMessageDialog(this, "Không xóa được");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }//GEN-LAST:event_btnXoaHDCTActionPerformed

    private void btnTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimkiemActionPerformed
        hoadondao dao = new hoadondao();

        try {
            hoadon hd = dao.findID(txtTimkiem.getText());
            if (hd != null) {
                txtMaHD.setText(hd.getMaHD());
                SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
                Date date = new Date();
                String ngaytao = formatter.format(hd.getNgaytao());
                txtNgaytao.setText(ngaytao);
                txtNguoitao.setText(hd.getMaNV());
                loadDataToTableHDCT();
                tongtien();
                loadCombobox();
                if (sharehelper.user.isVaitro()) {
                    btnXoa.setEnabled(true);
                }
                txtMaHD.setEditable(false);
                btnThem.setEnabled(false);
                btnThemHDCT.setEnabled(true);
                btnMoiHDCT.setEnabled(true);
                btnSuaHDCT.setEnabled(false);
                btnXoaHDCT.setEnabled(false);
                txtGiamgia.setText("");
                txtSoluong.setText("");
                    btnPrint.setEnabled(true);

            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy mã hóa đơn " + txtTimkiem.getText());
                     btnPrint.setEnabled(false);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnTimkiemActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        String Header
                = "******Resturant Management*******;"
                + "Mã hóa đơn " + txtMaHD.getText() + "Date:" + txtNgaytao.getText() + "       \n;"
                + "         Original Receipt        \n;"
                + "---------------------------------\n;"
                + "Product Description              \n;"
                + "---------------------------------\n;";

        int colum = tblHDCT.getColumnCount();
        int row = tblHDCT.getRowCount();
        List<String> list = new ArrayList<>();

        for (int i = 0; i < row; i++) {

            String t = "Tên sản phẩm: " + tblHDCT.getValueAt(i, 1).toString() + ", Số lượng: " + tblHDCT.getValueAt(i, 2).toString() + ", giảm giá: " + tblHDCT.getValueAt(i, 3).toString() + "%, thành tiền  " + tblHDCT.getValueAt(i, 4).toString() +"đ"+ "    \n;";
            list.add(t);
        }
        String tongtien
                = "\n;---------------------------------\n;"
                + "Tổng tiền:   " + txtTongtien.getText() + "\n;"
                + "*********************************\n;"
                + "            Thank You             \n;"
                + "_________________________________\n;";
        printBill p = new printBill();
        printBill.printCard(Header + list + tongtien);
    }//GEN-LAST:event_btnPrintActionPerformed

    private void cboTenSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTenSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTenSPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quanlyhoadon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quanlyhoadon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quanlyhoadon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quanlyhoadon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new quanlyhoadon().setVisible(true);
            }
        });
    }

    private void loadDataToTable() {
        DefaultTableModel model = (DefaultTableModel) tblHD.getModel();
        model.setRowCount(0);
        try {
            hoadondao dao = new hoadondao();

            List<hoadon> list = dao.findAll();
            for (hoadon hd : list) {

                model.addRow(new Object[]{
                    hd.getMaHD(),
                    hd.getNgaytao(),
                    hd.getMaNV()});
            }
            model.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
            e.printStackTrace();
        }

    }

    private void loadDataToTableHDCT() throws ClassNotFoundException, SQLException {
        DefaultTableModel model = (DefaultTableModel) tblHDCT.getModel();
        model.setRowCount(0);
        String sql = "select maHDCT , sanpham.tenSP ,soluong , giamgia, thanhtien = (sanpham.gia*soluong)-(sanpham.gia*soluong)*giamgia/100  from hoadonchitiet join sanpham on hoadonchitiet.maSP = sanpham.maSP where hoadonchitiet.maHD = ?";
        try (
                Connection con = database.openConnection();
                PreparedStatement pstm = con.prepareStatement(sql);) {
            pstm.setString(1, txtMaHD.getText());

            try (ResultSet rs = pstm.executeQuery()) {
                while (rs.next()) {

                    model.addRow(new Object[]{
                        rs.getInt("maHDCT"),
                        rs.getString("tenSP"),
                        rs.getInt("soluong"),
                        rs.getInt("giamgia"),
                        rs.getDouble("thanhtien"),});
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Lỗi truy vấn học viên!");
                e.printStackTrace();
            }

        }
    }

    private void tongtien() throws ClassNotFoundException, SQLException {
        String sql = "select tongtien = SUM((sanpham.gia*soluong)-(sanpham.gia*soluong)*giamgia/100) from hoadonchitiet join sanpham on hoadonchitiet.maSP = sanpham.maSP where hoadonchitiet.maHD = ?";
        try (
                Connection con = database.openConnection();
                PreparedStatement pstm = con.prepareStatement(sql);) {
            pstm.setString(1, txtMaHD.getText());
            try (ResultSet rs = pstm.executeQuery()) {
                if (rs.next()) {
                    double tongtien = rs.getDouble("tongtien");
                    String tt = String.valueOf(tongtien);
                    txtTongtien.setText(tt + " đ");
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnMoiHDCT;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSuaHDCT;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemHDCT;
    private javax.swing.JButton btnTimkiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaHDCT;
    private javax.swing.JComboBox<String> cboTenSP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable tblHD;
    private javax.swing.JTable tblHDCT;
    private javax.swing.JTextField txtGiamgia;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtNgaytao;
    private javax.swing.JTextField txtNguoitao;
    private javax.swing.JTextField txtSoluong;
    private javax.swing.JTextField txtTimkiem;
    private javax.swing.JTextField txtTongtien;
    // End of variables declaration//GEN-END:variables
}
